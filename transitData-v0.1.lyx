#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass tufte-book
\begin_preamble
 \usepackage{pdflscape}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Transit Data Issues- A Primer
\end_layout

\begin_layout Author
Tony Laidig
\end_layout

\begin_layout Date
September, 2013
\end_layout

\begin_layout Address
Disclaimer.
\end_layout

\begin_layout Address
This guide is the result of a career's worth of experience with transit
 data.
 In the process, the author has worked with data from dozens of transportation
 agencies, of varying sizes, both in the USA and internationally.
 The information within should not be considered the result of experience
 with any one particular entity, and where not cited, the opinions expressed
 are of the primary author alone and not of any other individual, company,
 agency, government, or interstellar federation.
 
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
The last decade has seen an explosion in the availability of data, and public
 transit is no exception.
 The development of the General (originally Google) Transit Feed Structure
 (GTFS) in 2005 brought to light data that was previously available to the
 public only on paper.
 Previously, when data was available for interchange internally, it was
 less accessible-- usually in more complex (e.g.
 TransXchange, TCIP), proprietary (e.g.
 TSDE), or home-grown formats.
 GTFS brings transit schedule data into a modern, open, and easily-consumable
 world by presenting a simplified de-facto standard that many developers
 can use without the knowing the intricacies of transit operations.
 Since that time, the number of 'outsiders' working with transit datasets
 has grown tremendously, and a number of applications using this data have
 been produced.
 
\end_layout

\begin_layout Standard
The purpose of this guide is intended to explain some of the intricacies
 in the process of transit schedule creation and to provide a statring point
 for a dialog between the parties involved through practical qualitative
 concepts.
 Its audience is intended to be developers who work with transit schedule
 data, and also those who generate the data in question.
 It is not intended to supplant the existing official GTFS documentation
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
https://developers.google.com/transit/gtfs/reference
\end_layout

\end_inset

, provide anything more than a brief introduction to scheduling practice,
 or be a survey of the practice in ITS systems implementation and engineering
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
There are better sources on that, such as http://www.fta.dot.gov/documents/2010Tran
sitITSArchRvw_-_08.29.2011.pdf
\end_layout

\end_inset

.
 This guide is written from the viewpoint of established, 'formalized,'
 transportation networks, run with a high degree of government oversight
 and/or operation.
 There is an ongoing effort to extend GTFS to more 'informal' environments;
 while parts of this guide may be useful in these cases, it can certainly
 use extension to cover additional situations that are uncommon in formalized
 networks.
\end_layout

\begin_layout Section
Why Schedule?
\end_layout

\begin_layout Standard
It is quite common for the layman to ask, that a world of real-time information,
 what purpose does a schedule serve? In short, a schedule models what happens
 'on the ground' when transit service is delievered.
 TCRP Report 135 (perhaps the best freely available guide on the topic of
 transit scheduling) defines four major groups that benefit from the existence
 of (realistic) schedules:
\end_layout

\begin_layout Enumerate
\noindent
To customers, a schedule provides the essential information needed to plan
 a trip, defines the arrival and departure times and the time the trip will
 take, makes sufficient capacity of service available so that the customers’
 trip will be comfortable, and ensures that customers will arrive at their
 destination at the promised time.
 
\end_layout

\begin_layout Enumerate
\noindent
To operators, scheduling defines the workday.
 Operators are the front line in terms of dealing with customers, and the
 interaction can be affected by [realistic] running and layover times ...
 Good schedules can reduce the stress inherent in this job, thus improving
 morale and minimizing absenteeism.
 
\end_layout

\begin_layout Enumerate
\noindent
To transit agencies, scheduling puts reliable service on the street where
 it will be most utilized.
 In addition, scheduling provides data and information to support other
 sections such as Marketing, Planning, Operations, Administration, and many
 downstream systems like AVL, APCs, voice annunciators, trip planners, and
 real time information systems.
 
\end_layout

\begin_layout Enumerate
\noindent
To general managers and chief financial officers, scheduling has major impacts
 on the quality and cost of operations...
 Scheduling is the brain of the transit organism in its day-to-day functioning.
 By its nature, scheduling has the clearest understanding of how and where
 cost efficiencies can be achieved in daily operations.
\end_layout

\begin_layout Standard
For these four groups, the degree to which the schedule actually models
 reality plays a large part in its usefulness.
 The qualitative concepts discussed in Chapter 2 are intended to improve
 the final result of this model in grading the degree to which it represents
 reality.
\end_layout

\begin_layout Subsection
A whirlwind introduction to Transit IT
\end_layout

\begin_layout Standard
Established transportation agencies often have legacy IT infrastructure
 in regular use.
 While buzzwords such as SOA, XML, REST, etc.
 may be known to their staff, organizations, especially in the public sector,
 are not always able to apply regular upgrades to their systems when supporting
 ongoing operations is imperative.
 In this situation, IT systems that grow organically over a number of years
 tend to have, for better or worse, a lot of seemingly meaningless complexity.
 Furthermore, organizations that have built out their own infrastructure
 prior to the availability of open standards and turn-key solutions often
 find integrating a new system a challenge.
 New ITS projects may require more tight coupling than existing practice.
 Take, for example, a scheduling system with inaccurate stops, which then
 feeds into an automated announcement system.
 With incorrect data, announcements may be made at the incorrect location,
 or for stops that are not scheduled.
\end_layout

\begin_layout Standard
A typical transit organization that oversees the operation of several hundred
 or more buses might have an IT space like the following.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Systems_Diagram.eps
	width 8in

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
A PACT for Good Data
\end_layout

\begin_layout Standard
This chapter presents four crucial concepts that underlie the information
 presented later in this guide, and that are important in describing the
 qualities of a system's data.
 These are Precision, Accuracy, Concurrency, and Transparency, or in manager
 speak, PACT.
 The exmples presented use an ubiquitous dataset in almost every transit
 data project, a dataset of stops.
\end_layout

\begin_layout Section*
Accuracy and Precision
\end_layout

\begin_layout Standard
\begin_inset Flex Marginnote
status open

\begin_layout Plain Layout

\emph on
Precision
\emph default
 of an example stop dataset, in ascending precision:
\end_layout

\begin_layout Itemize
A stop is at Main and 1st Street.
 
\end_layout

\begin_layout Itemize
A stop is at Main and 1st Street, Northbound.
\end_layout

\begin_layout Itemize
A stop is at Main and 1st Street, Northbound, NE corner.
\end_layout

\begin_layout Itemize
A stop is at Main and 1st Street, Northbound, NE corner, with coordinates
 X, Y.
\end_layout

\begin_layout Itemize
A stop is at Main and 1st Street, Northbound, NE corner, with coordinates
 X.XXXXX, Y.YYYYY, served by Route 101.
 
\begin_inset VSpace smallskip
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Two terms are often used to describe the quality of a dataset--- 
\emph on
accuracy
\emph default
 and 
\emph on
precison
\emph default
.
 The 
\emph on
accuracy
\emph default
 of a dataset is the degree of closeness that a record or observation matches
 the real-world value.
 
\emph on
Precision
\emph default
 refers to the level of refinement available in the dataset to store said
 record.
 A stop dataset provides a simple case for differing levels of precision
 and accuracy, and these two concepts are described in the margin.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Marginnote
status open

\begin_layout Plain Layout

\emph on
\SpecialChar \textcompwordmark{}
Accuracy
\emph default
 of the example stop dataset is dependent various factors, including:
\end_layout

\begin_layout Itemize
Notification of changes 
\end_layout

\begin_deeper
\begin_layout Itemize
e.g.
 
\begin_inset Quotes eld
\end_inset

The stop at Main and 1st was removed due to construction
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Master database update frequency 
\end_layout

\begin_deeper
\begin_layout Itemize
i.e.
 when does the notification get entered into the central system
\end_layout

\end_deeper
\begin_layout Itemize
Frequency of exports and releases
\end_layout

\begin_deeper
\begin_layout Itemize
i.e.
 at what interval is GTFS generated from the master database
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
A dataset can be accurate but not precise, precise but not accurate, neither,
 or both.
 Some organizations conduct expensive, highly detailed stop surveys which
 are both precise and accurate at the time of their creation.
 It is not uncommon for this survey to be considered part of a capital project,
 and upon completion the dataset's owners often 'wipe their hands,' believing
 that the work is done.
 This, however, is often a folly.
 Due to changes on the ground, accuracy of a stop dataset degrades over
 time if it is not updated.
 Streets are paved and closed, businesses open and close, and in some areas
 new neighborhoods are constructed quickly.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Concurrency
\end_layout

\begin_layout Standard
While precision and accuracy are important when considering a project that
 only uses, or heavily relies upon one dataset.
 The elephant in the room in projects that draw upon data from multiple
 systems is the 
\emph on
concurrency
\emph default
 of that data.
 Concurrency, in this case, refers to the ability to join together, reliably,
 the data from one or many systems
\begin_inset Foot
status open

\begin_layout Plain Layout
Yes, systems have the opportunity to not be concurrent with themselves.
 Oftentimes, large transit operations use their scheduling systems in phases,
 where one area may be ready for production while the rest of the network
 is being worked on.
 For example, Routes 1 and 2 pass by the stop at 1st and Main St.
 Route 1 is scheduled at an earlier date than Route 2.
 When Route 2 is scheduled, the scheduler has been notified that there will
 be long term construction at 1st and Main St and buses cannot stop there;
 she then removes the stop in a manner that affects Route 2 only.
 When data is export from the scheduling system, Route 1 will still be recorded
 as stopping at 1st and Main, even though the network has been changed.
\end_layout

\end_inset

.
 The design of concurrent systems often entails finding reliable techniques
 for coordinating their execution, data exchange, and execution scheduling
 to minimize confusion and maximise utility
\begin_inset Foot
status open

\begin_layout Plain Layout
Inspired by Wikipedia entry on concurrency https://en.wikipedia.org/wiki/Concurren
cy_%28computer_science%29
\end_layout

\end_inset

.
 Data from systems originally designed to work independently may need some
 finesse to properly match.
\end_layout

\begin_layout Subsection*
The Enemies of Concurrency
\end_layout

\begin_layout Standard
It is often said that a system is only as good as its weakest component.
 While it is difficult to quantify concurrency, it is possible to suggest
 characteristics of 'weaker' data sources that should be validated before
 use.
 Some of these are:
\end_layout

\begin_layout Itemize
Possibility of Unsanitized / Unvalidated data entry
\end_layout

\begin_deeper
\begin_layout Itemize
If an operator can enter data that is invalid or non-sensical, then the
 system that uses it must take this possibility into account.
\end_layout

\end_deeper
\begin_layout Itemize
Long update or synchronization intervals
\end_layout

\begin_deeper
\begin_layout Itemize
For a bus system, a stop dataset that is updated every several years is
 likely to have errors.
 
\end_layout

\end_deeper
\begin_layout Itemize
No / limited versioning
\end_layout

\begin_deeper
\begin_layout Itemize
Datasets should clearly include the times they were updated.
\end_layout

\end_deeper
\begin_layout Standard
A medium to large-size public transport operation may have an IT workflow
 of many stages, often covered by different departments or even different
 agencies, public and private.
 The less that the systems involved are concurrent, the more difficult building
 a new system upon those projects will be.
\end_layout

\begin_layout Section
Transparancy
\end_layout

\begin_layout Standard
Hopefully, when working with data from an existing system, there is documentatio
n on what that data means.
 Often, however, when the data has only been used for one purpose or within
 one organization, the documentation is not complete.
 Transparency refers to the degree to which the data conforms to the documentati
on provided.
\end_layout

\begin_layout Itemize
Poor and/or obsolete documentation
\end_layout

\begin_deeper
\begin_layout Itemize
After implementation, some systems start off well-documented, but as time
 goes on and minor changes are made to both the data and the usage of that
 data, said documentation is not always updated.
 Well-intentioned users may extend the existing data structure beyond the
 original design by adding additional information that does not strictly
 conform to original specifications.This information may or may not be passed
 down through word of mouth, and is often internalized to the point that
 when asked, the data owners suddenly recall the difference.
\end_layout

\begin_layout Itemize
Agencies often take advantage of 'turnkey' systems that include an openly-access
ible database component often add additional functionality 'around the edges.'
 It is the author's experience that these additions are rarely documented.
\end_layout

\end_deeper
\begin_layout Itemize
Special cases
\end_layout

\begin_deeper
\begin_layout Itemize
IT groups may tailor the same application for different users performing
 the same task within the same organization, often based upon varying user
 preferences.
 
\begin_inset Marginal
status open

\begin_layout Itemize
One operating division may prefer that their route numbers begin with a
 leading zero (e.g 01 vs 1), while another may not.
 Beware special cases such as this one.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Excessive room for interpretation and/or lack of usage conventions.
\end_layout

\begin_deeper
\begin_layout Itemize
If a data model allows for the same data can be stored in two places, it
 is often the case that different users see the data differently.
 For example, if a stop dataset model has fields for both STOP_ID (intented
 to be a normalized key) and STOP_CODE (intended to be a short, but human-readab
le descriptor) and users fail to understand this difference, users at may
 choose to populate these fields in ways that are not consistent across
 the dataset.
 A very basic example is presented in the margin.
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STOP_ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STOP_CODE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1001
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1002
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Ambiguous, Undefined and/or complex key structure
\end_layout

\begin_deeper
\begin_layout Itemize
a 'Primary Key' uniquely defines the characteristics of each record in a
 dataset, and has to consist of characteristics that cannot be duplicated
 by any other row.
 If the key structure for a dataset is not clearly defined or not enforced,
 making the proper relations within the dataset is more difficult and concurrenc
y may be affected.
\end_layout

\end_deeper
\begin_layout Itemize
Data intended for human visual consumption.
\end_layout

\begin_deeper
\begin_layout Itemize
Data should be machine readable, not just human readable.
 If a system has previously been used with the sole aim of output for human
 interpretation, it is likely that in places data are conflated together
 or that the data does not accurately conform to its specification.
 
\end_layout

\end_deeper
\begin_layout Itemize
Specifications that do not agree with established practice common nomenclature
\end_layout

\begin_deeper
\begin_layout Itemize
Developers are notorious for not reading documentation.
 If a format specification happens to borrow a term from the common nomenclature
 and use that term either in a more loose or strict fashion, it is likely
 that the generators of the format are using the field according to their
 definition.
 An example of this is provided in the margin.
 
\begin_inset Marginal
status open

\begin_layout Plain Layout
A 
\emph on
Vehicle Block, 
\emph default
in common transit usage, is vehicle's schedule that begins and ends at a
 depot.
 GTFS provides optional block_id support, specifically for when 
\begin_inset Quotes eld
\end_inset

a passenger can transfer from one trip to the next just by staying in the
 vehicle.
\begin_inset Quotes erd
\end_inset

 It is not uncommon that GTFS feeds use the common definition, rather than
 conform strictly to the GTFS specification.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section*
Requirements for data based on project type
\end_layout

\begin_layout Standard
In growing order of precision, accuracy, and concurrency:
\end_layout

\begin_layout Standard
Scheduling
\end_layout

\begin_layout Standard
Detailed Scheduling
\end_layout

\begin_layout Standard
CAD/AVL
\end_layout

\begin_layout Standard
Static Trip Planning
\end_layout

\begin_layout Standard
Real-Time Customer Information
\end_layout

\begin_layout Standard
Reporting
\end_layout

\begin_layout Standard
On Board Announcements
\end_layout

\begin_layout Standard
Real-Time Trip Planning
\end_layout

\begin_layout Section
Changes: when and why.
\end_layout

\begin_layout Standard
Given the complex nature of many transit systems and the differing requirements
 for PACT based on the type of project, the question is not if data will
 need changing, but when and how.
 When implementing a complex system using data from another party, it is
 often easier for all parties when the data producers and users agree on
 a policy on what data should be updated and at what moment.
 One framework that may be useful in quantifying the value of updates to
 data is to define impacts from service changes over three dimensions: 
\end_layout

\begin_layout Itemize
(temporal) duration, the amount of time that the change will be in effect;
\end_layout

\begin_layout Itemize
(spatial) extent, the area over which the change affects; and 
\end_layout

\begin_layout Itemize
(human) magnitude, the number of customers/passengers that are affected.
 
\end_layout

\begin_layout Standard
The data owners should define the relevant impact classifications (short
 versus long duration, small versus large area, etc), and the proper policy
 will be specific to the organization's needs.
 One of many possible strategies is outlined below.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Temporal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Human
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Policy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Very Short
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Small
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Small
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Do nothing.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Very Short
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Large
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Large
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a 
\begin_inset Quotes eld
\end_inset

Service Alert.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Long
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Small
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Small
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update data with next scheduled update.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Long
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Large
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Large
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update schedule data ASAP.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter*
The 
\begin_inset Quotes eld
\end_inset

Common
\begin_inset Quotes erd
\end_inset

 scheduling model.
\end_layout

\begin_layout Standard
As the GTFS model does not always match the common scheduling model, some
 sections below contain additional information.
 
\end_layout

\begin_layout Standard
A trip is a movement from origin to destination, where origin or destination
 may be a garage or terminal.
 Trips may either be revenue (in service) or non-revenue (e.g.
 'pullout' from depot, 'pullin' to depot, deadhead between locations or
 'layover' at one location).
\end_layout

\begin_layout Standard
Related although not covered explicitly in the GTFS model are trip Patterns
 (also called variants): a specific series of stops and routing that can
 be repeated one or many times within a schedule.
 GTFS can handle trip patterns by specifying a base trip and making an entry
 in the frequencies.txt file.
\end_layout

\begin_layout Standard
Block: set of bus movements that begin at a depot (the first movement being
 a “pullout”) and end at a depot (the last movement being a “pullin”).
 A block consists of a series of complete revenue and non-revenue trips.
 One vehicle can serve multiple blocks in a day.
 GTFS provides optional block_id support in the trips.txt file, specifically
 for when 
\begin_inset Quotes eld
\end_inset

a passenger can transfer from one trip to the next just by staying in the
 vehicle.
\begin_inset Quotes erd
\end_inset

 It is common that the strict GTFS definition is not actually followed by
 processes that generate GTFS.
 Block identifiers are highly useful when joining data from two different
 sources.
 
\end_layout

\begin_layout Standard
Run: an operator’s daily work assignment, which covers a series of partial
 or complete trips.
 One or more runs can work a single block.
 Runs can also work on multiple vehicles/blocks.
 GTFS, in its purest form, does not model blocks; understanding the limits
 in a vehicle operator's scheduled work, however, may uncover errors that
 present themselves in transit data.
\end_layout

\begin_layout Standard
The difference between runs, blocks and trips, is illustrated in the diagram
 below: Figure 3: Example Run/Trip/Block Time-Space Diagram
\end_layout

\begin_layout Subsection
Calendar.txt
\end_layout

\begin_layout Standard
Service Date: a given trip, block, or run of transit service may span multiple
 calendar days.
 However, each of these is associated with a particular “service date” defining
 the calendar data used for record-keeping of that unit of service.
 For example, a run might span from 11:00pm on a Saturday until 5:00am Sunday.
 In this case, the run, and all trips on that run, will be typically associated
 with the service date equal to the date on which most of the service occurred,
 even if they actually occur on the date prior.
\end_layout

\begin_layout Standard
Service ID / Service Class: an abstraction for specifying the set of trips
 that will run on a certain type of day (e.g.
 Weekday, Saturday, Holiday).
 One Service Date will have one Service Class.
 GTFS models these in the calendar.txt and calendar_dates.txt files.
\end_layout

\begin_layout Subsection
Shapes.txt
\end_layout

\begin_layout Standard
Shapes or Paths are often generated by performing a network analysis, tracing
 a route along a defined street or track network.
 Depending on the system, a data provider may use an existing off-the-shelf
 dataset as a base, modify said dataset, or have their own network.
 There are many problems that can arise when the underlying dataset is not
 accurate; see later in this document for further examples.
 
\end_layout

\begin_layout Chapter*
The GTFS Model and Issues That May Arise
\end_layout

\begin_layout Section*
Shapes.txt 
\end_layout

\begin_layout Standard
Incomplete networks.
 Bad topology.
 Physically impossible routings
\end_layout

\begin_layout Standard
-- missing sections
\end_layout

\begin_layout Section*
Stops.txt
\end_layout

\begin_layout Subsection*
Like in Real Estate
\end_layout

\begin_layout Standard
It is often said that the only thing that matters in real estate is 
\begin_inset Quotes eld
\end_inset

Location, Location, Location.
\begin_inset Quotes erd
\end_inset

 This is also true for stop locations and names in transit data.
 Stops need to be accurate to a reasonable amount because:
\end_layout

\begin_layout Standard
Terminals and Layovers
\end_layout

\begin_layout Standard
Announcements
\end_layout

\begin_layout Standard
Lining data up between agencies
\end_layout

\begin_layout Subsection*
When is a stop not a stop?
\end_layout

\begin_layout Standard
Often, automated scheduling software does not draw a shape correctly.
 In order to help the automated routing algorithm to make the correct route,
 schedulers often insert 'dummy stops,' where non-revenue stops are included
 in the system.
 Dummy stops may also be included to faciltate scheduling and road operations
 (e.g.
 'this trip should pass First Ave and Main St at 5:00').
 As these are non-revenue stops, they should not make it into a trip planner
 or AVL system.
\end_layout

\begin_layout Standard
Trips - Concurrency
\end_layout

\begin_layout Standard
Awry: Physically impossible routings 
\end_layout

\begin_layout Standard
Stops and Stop_times out of geo / temporal order 
\end_layout

\begin_layout Standard
What happens around midnight 
\end_layout

\begin_layout Standard
Layover / Terminal Locations 
\end_layout

\begin_layout Standard
Missing data (e.g.
 shapes, trips) 
\end_layout

\end_body
\end_document
